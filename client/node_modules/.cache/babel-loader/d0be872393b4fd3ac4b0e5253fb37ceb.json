{"ast":null,"code":"var _jsxFileName = \"/Users/maximzadoina/Work/ecommerce/src/components/sign-up/sign-up.component.tsx\";\nimport React from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport \"./sign-up.styles.scss\";\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n\n      if (password !== confirmPassword) {\n        alert(\"The passwords don't match!\");\n        return;\n      }\n\n      try {\n        const {\n          user\n        } = await auth.createUserWithEmailAndPassword(email, password);\n        createUserProfileDocument(user, {\n          displayName\n        });\n        this.setState({\n          displayName: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\"\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"I don't have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"sign-up-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      handleChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      handleChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      handleChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      handleChange: this.handleChange,\n      label: \"Confirm Passowrd\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \"Sign Up\")));\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/maximzadoina/Work/ecommerce/src/components/sign-up/sign-up.component.tsx"],"names":["React","FormInput","CustomButton","auth","createUserProfileDocument","SignUp","Component","constructor","props","handleSubmit","event","preventDefault","displayName","email","password","confirmPassword","state","alert","user","createUserWithEmailAndPassword","setState","error","console","handleChange","name","value","target","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\n\nimport \"./sign-up.styles.scss\";\n\ninterface MyProps {}\ninterface MyState {\n  displayName:string,\n  email:string,\n  password:string,\n  confirmPassword:string,\n\n}\nclass SignUp extends React.Component<MyProps, MyState> {\n  constructor(props: MyProps) {\n    super(props);\n\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    };\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const { displayName, email, password, confirmPassword } = this.state;\n\n    if (password !== confirmPassword) {\n      alert(\"The passwords don't match!\");\n      return;\n    }\n    try {\n      const { user } = await auth.createUserWithEmailAndPassword(\n        email,\n        password\n      );\n      createUserProfileDocument(user, { displayName });\n      this.setState({\n        displayName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  handleChange = event => {\n    const { name,value } = event.target;\n    this.setState({[name]: value})\n  };\n\n  render() {\n    const { displayName, email, password, confirmPassword } = this.state;\n    return (\n      <div className=\"sign-up\">\n        <h2 className=\"title\">I don't have a account</h2>\n        <span>Sign up with your email and password</span>\n        <form onSubmit={this.handleSubmit} className=\"sign-up-form\">\n          <FormInput\n            type=\"text\"\n            name=\"displayName\"\n            value={displayName}\n            handleChange={this.handleChange}\n            label=\"Display Name\"\n            required\n          ></FormInput>\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            handleChange={this.handleChange}\n            label=\"Email\"\n            required\n          ></FormInput>\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            handleChange={this.handleChange}\n            label=\"Password\"\n            required\n          ></FormInput>\n          <FormInput\n            type=\"password\"\n            name=\"confirmPassword\"\n            value={confirmPassword}\n            handleChange={this.handleChange}\n            label=\"Confirm Passowrd\"\n            required\n          ></FormInput>\n\n          <CustomButton type=\"submit\">Sign Up</CustomButton>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}