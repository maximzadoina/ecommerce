{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from \"./root-reducer\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); //sagaMiddleware.run()\n\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/maximzadoina/Work/ecommerce/src/redux/store.ts"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","rootReducer","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAACF,oBAAoB,EAAzC;AAEA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBR,MAAjB;AACD;;AACD,OAAO,MAAMS,KAAK,GAAGZ,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGM,WAAJ,CAA7B,CAAzB,C,CACP;;AACA,OAAO,MAAMM,SAAS,GAAGX,YAAY,CAACU,KAAD,CAA9B;AACP,eAAe;AAAEA,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootReducer from \"./root-reducer\";\n\nconst sagaMiddleware=createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n//sagaMiddleware.run()\nexport const persistor = persistStore(store);\nexport default { store, persistor };\n"]},"metadata":{},"sourceType":"module"}