{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport { UserActionTypes } from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/maximzadoina/Work/ecommerce/src/redux/user/user.sagas.ts"],"names":["takeLatest","put","call","all","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInSuccess","signInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA6BC,GAA7B,QAAuC,oBAAvC;AACA,SAAQC,eAAR,QAA8B,cAA9B;AACA,SAAQC,IAAR,EAAaC,cAAb,EAA4BC,yBAA5B,QAA4D,+BAA5D;AACA,SAAQC,aAAR,EAAsBC,aAAtB,QAA0C,gBAA1C;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAO,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAAnB;AACA,UAAMO,OAAO,GAAC,MAAMX,IAAI,CAACK,yBAAD,EAAkCI,IAAlC,CAAxB;AACA,UAAMG,YAAY,GAAC,MAAMD,OAAO,CAACE,GAAR,EAAzB;AACA,UAAMd,GAAG,CAACO,aAAa,CAAC;AAACQ,MAAAA,EAAE,EAACF,YAAY,CAACE,EAAjB;AAAoB,SAAGF,YAAY,CAACG,IAAb;AAAvB,KAAD,CAAd,CAAT;AACH,GALD,CAKC,OAAMC,KAAN,EAAY;AACT,UAAMjB,GAAG,CAACQ,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAT,CAA1B,EAAqD;AACxD,MAAG;AACC,UAAK;AAACX,MAAAA;AAAD,QAAO,MAAMN,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CAAlB;AACA,UAAMT,OAAO,GAAC,MAAMX,IAAI,CAACK,yBAAD,EAAkCI,IAAlC,CAAxB;AACA,UAAMG,YAAY,GAAC,MAAMD,OAAO,CAACE,GAAR,EAAzB;AACA,UAAMd,GAAG,CAACO,aAAa,CAAC;AAACQ,MAAAA,EAAE,EAACF,YAAY,CAACE,EAAjB;AAAoB,SAAGF,YAAY,CAACG,IAAb;AAAvB,KAAD,CAAd,CAAT;AAEH,GAND,CAOA,OAAMC,KAAN,EAAY;AACR,UAAMjB,GAAG,CAACQ,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUM,mBAAV,GAA+B;AAClC,QAAMxB,UAAU,CAACI,eAAe,CAACqB,oBAAjB,EAAsCf,gBAAtC,CAAhB;AACH;AAED,OAAO,UAAUgB,kBAAV,GAA8B;AACjC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,mBAAjB,EAA4CR,eAA5C,CAAhB;AACH;AAED,OAAO,UAAUS,SAAV,GAAqB;AACxB,QAAMzB,GAAG,CAAC,CAACD,IAAI,CAACsB,mBAAD,CAAL,EAA2BtB,IAAI,CAACwB,kBAAD,CAA/B,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest,put, call,all} from 'redux-saga/effects'\nimport {UserActionTypes} from './user.types'\nimport {auth,googleProvider,createUserProfileDocument} from '../../firebase/firebase.utils'\nimport {signInSuccess,signInFailure} from './user.actions'\n\nexport function* signInWithGoogle(){\n    try{\n        const {user}=yield auth.signInWithPopup(googleProvider)\n        const userRef=yield call(createUserProfileDocument as any,user)\n        const userSnapshot=yield userRef.get()\n        yield put(signInSuccess({id:userSnapshot.id,...userSnapshot.data()}))\n    }catch(error){\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* signInWithEmail({payload:{email,password}}){\n    try{\n        const{user}=yield auth.signInWithEmailAndPassword(email,password)\n        const userRef=yield call(createUserProfileDocument as any,user)\n        const userSnapshot=yield userRef.get()\n        yield put(signInSuccess({id:userSnapshot.id,...userSnapshot.data()}))\n    \n    }\n    catch(error){\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* onGoogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInWithGoogle)\n}\n\nexport function* onEmailSignInStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START as any,signInWithEmail)\n}\n\nexport function* userSagas(){\n    yield all([call(onGoogleSignInStart),call(onEmailSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}