{"ast":null,"code":"var _jsxFileName = \"/Users/maximzadoina/Work/ecommerce/src/components/sign-in/sign-in.component.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      const {\n        emailSignInStart\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChangePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n      console.log(this.state.password);\n    };\n\n    this.handleChangeEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n      console.log(this.state.email);\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      handleChange: this.handleChangeEmail,\n      value: this.state.email,\n      label: \"email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChangePassword,\n      label: \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \" Sign in \"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/maximzadoina/Work/ecommerce/src/components/sign-in/sign-in.component.tsx"],"names":["React","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","handleChangePassword","setState","target","value","console","log","handleChangeEmail","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux'\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport {googleSignInStart,emailSignInStart} from '../../redux/user/user.actions'\nimport './sign-in.styles.scss';\n\ntype MyProps = {  };\ntype MyState = { email:string,password:string };\nclass SignIn extends React.Component<MyProps, MyState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    const{email,password}=this.state\n    const{emailSignInStart}:any=this.state\n\n    emailSignInStart(email,password)\n    \n\n  };\n\n  handleChangePassword = event => {\n\n    this.setState({ password:event.target.value });\n    console.log(this.state.password)\n  };\n  handleChangeEmail = event => {\n\n    this.setState({ email:event.target.value });\n    console.log(this.state.email)\n  };\n  render() {\n    const {googleSignInStart}:any=this.props\n    return (\n      <div className='sign-in'>\n        <h2>I already have an account</h2>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={this.handleSubmit}>\n          <FormInput\n            name='email'\n            type='email'\n            handleChange={this.handleChangeEmail}\n            value={this.state.email}\n            label='email'\n            required\n          />\n          <FormInput\n            name='password'\n            type='password'\n            value={this.state.password}\n            handleChange={this.handleChangePassword}\n            label='password'\n            required\n          />\n          <div className='buttons'>\n            <CustomButton type='submit'> Sign in </CustomButton>\n            <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn>\n              Sign in with Google\n            </CustomButton>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps=dispatch=>({\n  googleSignInStart:()=>dispatch(googleSignInStart()),\n  emailSignInStart:(email,password)=>dispatch(emailSignInStart({email,password}))\n})\n\nexport default connect(null,mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}