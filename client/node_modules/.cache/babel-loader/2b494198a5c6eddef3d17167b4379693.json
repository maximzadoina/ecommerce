{"ast":null,"code":"var _jsxFileName = \"/Users/maximzadoina/Work/ecommerce/src/pages/shop/shop.component.tsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      selectIsCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: selectIsCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 62\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: selectIsCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 27\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  selectIsCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/maximzadoina/Work/ecommerce/src/pages/shop/shop.component.tsx"],"names":["React","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","selectIsCollectionFetching","WithSpinner","CollectionsOverview","CollectionPage","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,0BAAR,QAAyC,+BAAzC;AACA,SAAQC,0BAAR,QAAyC,iCAAzC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEC,MAAMC,8BAA8B,GAACH,WAAW,CAACC,mBAAD,CAAhD;AACA,MAAMG,yBAAyB,GAACJ,WAAW,CAACE,cAAD,CAA3C;;AAED,MAAMG,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAIvCC,EAAAA,iBAAiB,GAAE;AACjB,UAAK;AAACT,MAAAA;AAAD,QAAiC,KAAKU,KAA3C;AACAV,IAAAA,0BAA0B;AAC3B;;AACCW,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,KAAD;AAAOX,MAAAA;AAAP,QAAyC,KAAKS,KAApD;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGH,KAAD,iBAAS,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAET;AAA3C,SAA2ES,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAEH,KAAK,iBAAG,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAET;AAAtC,SAAqES,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AAnBoC;;AAsBvC,MAAMI,eAAe,GAACf,wBAAwB,CAAC;AAC7CE,EAAAA,0BAA0B,EAACA;AADkB,CAAD,CAA9C;;AAIA,MAAMc,kBAAkB,GAACC,QAAQ,KAAG;AAClChB,EAAAA,0BAA0B,EAAC,MAAIgB,QAAQ,CAAChB,0BAA0B,EAA3B;AADL,CAAH,CAAjC;;AAIA,eAAeF,OAAO,CAACgB,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CR,QAA5C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {createStructuredSelector} from 'reselect'\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions'\nimport {selectIsCollectionFetching} from '../../redux/shop/shop.selectors'\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\n const CollectionsOverviewWithSpinner=WithSpinner(CollectionsOverview)\n const CollectionPageWithSpinner=WithSpinner(CollectionPage)\n\nclass ShopPage extends React.Component {\n \n  \n  \ncomponentDidMount(){\n  const{fetchCollectionsStartAsync}:any=this.props;\n  fetchCollectionsStartAsync()\n}\n  render() {\n    const {match,selectIsCollectionFetching}:any = this.props\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} render={(props)=><CollectionsOverviewWithSpinner isLoading={selectIsCollectionFetching} {...props}/>} />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={props=>(<CollectionPageWithSpinner isLoading={selectIsCollectionFetching}{...props}/>)}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps=createStructuredSelector({\n  selectIsCollectionFetching:selectIsCollectionFetching\n})\n\nconst mapDispatchToProps=dispatch=>({\n  fetchCollectionsStartAsync:()=>dispatch(fetchCollectionsStartAsync())\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}