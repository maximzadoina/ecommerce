{"ast":null,"code":"var _jsxFileName = \"/Users/maximzadoina/Work/ecommerce/src/components/sign-up/sign-up.component.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        signUpStart\n      } = this.props;\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n\n      if (password !== confirmPassword) {\n        alert(\"passwords don't match\");\n        return;\n      }\n\n      signUpStart({\n        displayName,\n        email,\n        password\n      });\n    };\n\n    this.handleChangeDisplayName = event => {\n      this.setState({\n        displayName: event.target.value\n      });\n    };\n\n    this.handleChangeEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.handleChangePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.handleChangeConfirmPassword = event => {\n      this.setState({\n        confirmPassword: event.target.value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"I do not have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      handleChange: this.handleChangeDisplayName,\n      label: \"Display Name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      handleChange: this.handleChangeEmail,\n      label: \"Email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      handleChange: this.handleChangePassword,\n      label: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      handleChange: this.handleChangeConfirmPassword,\n      label: \"Confirm Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/maximzadoina/Work/ecommerce/src/components/sign-up/sign-up.component.tsx"],"names":["React","connect","FormInput","CustomButton","signUpStart","SignUp","Component","constructor","props","handleSubmit","event","preventDefault","displayName","email","password","confirmPassword","state","alert","handleChangeDisplayName","setState","target","value","handleChangeEmail","handleChangePassword","handleChangeConfirmPassword","render","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["  \nimport React from 'react';\nimport {connect} from 'react-redux'\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport {signUpStart } from '../../redux/user/user.actions'\nimport './sign-up.styles.scss';\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    const {signUpStart}:any=this.props\n    const { displayName, email, password, confirmPassword }:any = this.state;\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({displayName,email,password})\n\n    \n  };\n\n  handleChangeDisplayName = event => {\n    this.setState({ displayName:event.target.value});\n  };\n  handleChangeEmail = event => {\n    this.setState({ email:event.target.value});\n  };\n  handleChangePassword = event => {\n    this.setState({ password:event.target.value});\n  };\n  handleChangeConfirmPassword = event => {\n    this.setState({ confirmPassword:event.target.value});\n  };\n\n  render() {\n    const { displayName, email, password, confirmPassword }:any = this.state;\n    return (\n      <div className='sign-up'>\n        <h2 className='title'>I do not have a account</h2>\n        <span>Sign up with your email and password</span>\n        <form className='sign-up-form' onSubmit={this.handleSubmit}>\n          <FormInput\n            type='text'\n            name='displayName'\n            value={displayName}\n            handleChange={this.handleChangeDisplayName}\n            label='Display Name'\n            required\n          />\n          <FormInput\n            type='email'\n            name='email'\n            value={email}\n            handleChange={this.handleChangeEmail}\n            label='Email'\n            required\n          />\n          <FormInput\n            type='password'\n            name='password'\n            value={password}\n            handleChange={this.handleChangePassword}\n            label='Password'\n            required\n          />\n          <FormInput\n            type='password'\n            name='confirmPassword'\n            value={confirmPassword}\n            handleChange={this.handleChangeConfirmPassword}\n            label='Confirm Password'\n            required\n          />\n          <CustomButton type='submit'>SIGN UP</CustomButton>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps=dispatch=>({\n  signUpStart:userCredentials=>dispatch(signUpStart(userCredentials))\n})\n\nexport default connect(null,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}