{"ast":null,"code":"var _jsxFileName = \"/Users/maximzadoina/Work/ecommerce/src/components/sign-up/sign-up.component.tsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChangeDisplayName = event => {\n    setCredentials({ ...userCredentials,\n      displayName: event.target.value\n    });\n  };\n\n  const handleChangeEmail = event => {\n    setCredentials({ ...userCredentials,\n      email: event.target.value\n    });\n  };\n\n  const handleChangePassword = event => {\n    setCredentials({ ...userCredentials,\n      password: event.target.value\n    });\n  };\n\n  const handleChangeConfirmPassword = event => {\n    setCredentials({ ...userCredentials,\n      confirmPassword: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"I do not have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    handleChange: handleChangeDisplayName,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    handleChange: handleChangeEmail,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    handleChange: handleChangePassword,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    handleChange: handleChangeConfirmPassword,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/maximzadoina/Work/ecommerce/src/components/sign-up/sign-up.component.tsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","userCredentials","setCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChangeDisplayName","target","value","handleChangeEmail","handleChangePassword","handleChangeConfirmPassword","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["  \nimport React,{useState} from 'react';\nimport {connect} from 'react-redux'\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport {signUpStart } from '../../redux/user/user.actions'\nimport './sign-up.styles.scss';\n\nconst SignUp =({signUpStart})=> {\n  const[userCredentials,setCredentials]=useState({\n    displayName:'',\n    email:'',\n    password:'',\n    confirmPassword:''\n  })\n\n  const { displayName, email, password, confirmPassword }:any = userCredentials\n  \n const handleSubmit = async event => {\n    event.preventDefault();\n  \n\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({displayName,email,password})\n\n    \n  };\n\n const handleChangeDisplayName = event => {\n    setCredentials({ ...userCredentials,displayName:event.target.value});\n  };\n  const handleChangeEmail = event => {\n    setCredentials({ ...userCredentials,email:event.target.value});\n  };\n const handleChangePassword = event => {\n    setCredentials({...userCredentials, password:event.target.value});\n  };\n const handleChangeConfirmPassword = event => {\n    setCredentials({ ...userCredentials,confirmPassword:event.target.value});\n  };\n\n    return (\n      <div className='sign-up'>\n        <h2 className='title'>I do not have a account</h2>\n        <span>Sign up with your email and password</span>\n        <form className='sign-up-form' onSubmit={handleSubmit}>\n          <FormInput\n            type='text'\n            name='displayName'\n            value={displayName}\n            handleChange={handleChangeDisplayName}\n            label='Display Name'\n            required\n          />\n          <FormInput\n            type='email'\n            name='email'\n            value={email}\n            handleChange={handleChangeEmail}\n            label='Email'\n            required\n          />\n          <FormInput\n            type='password'\n            name='password'\n            value={password}\n            handleChange={handleChangePassword}\n            label='Password'\n            required\n          />\n          <FormInput\n            type='password'\n            name='confirmPassword'\n            value={confirmPassword}\n            handleChange={handleChangeConfirmPassword}\n            label='Confirm Password'\n            required\n          />\n          <CustomButton type='submit'>SIGN UP</CustomButton>\n        </form>\n      </div>\n    );\n  }\n\nconst mapDispatchToProps=dispatch=>({\n  signUpStart:userCredentials=>dispatch(signUpStart(userCredentials))\n})\n\nexport default connect(null,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}