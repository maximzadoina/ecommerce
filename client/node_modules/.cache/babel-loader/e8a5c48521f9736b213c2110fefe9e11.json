{"ast":null,"code":"var _jsxFileName = \"/Users/maximzadoina/Work/ecommerce/src/pages/shop/shop.component.tsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = void 0;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 62\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 27\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/maximzadoina/Work/ecommerce/src/pages/shop/shop.component.tsx"],"names":["React","Route","connect","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionsOverview","CollectionPage","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","get","then","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEC,MAAMC,8BAA8B,GAACH,WAAW,CAACC,mBAAD,CAAhD;AACA,MAAMG,yBAAyB,GAACJ,WAAW,CAACE,cAAD,CAA3C;;AAED,MAAMG,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC/B;AACJC,MAAAA,OAAO,EAAC;AADJ,KAD+B;AAAA,SAIpCC,uBAJoC;AAAA;;AAMvCC,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAACX,MAAAA;AAAD,QAAwB,KAAKY,KAAnC;AACA,UAAMC,aAAa,GAACf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAApB;AACAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAE;AACjC,YAAMC,cAAc,GAACnB,+BAA+B,CAACkB,QAAD,CAApD;AACAjB,MAAAA,iBAAiB,CAACkB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACV,QAAAA,OAAO,EAAC;AAAT,OAAd;AACD,KAJD;AAOD;;AAECW,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA;AAAD,QAAc,KAAKT,KAAzB;AACA,UAAM;AAACH,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEa,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGV,KAAD,iBAAS,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAEV,KAAK,iBAAG,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAkDG,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AA9BoC;;AAiCvC,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACtCxB,EAAAA,iBAAiB,EAAEkB,cAAc,IAC/BM,QAAQ,CAACxB,iBAAiB,CAACkB,cAAD,CAAlB;AAF4B,CAAL,CAAnC;;AAKA,eAAerB,OAAO,CAAC,IAAD,EAAM0B,kBAAN,CAAP,CAAiCjB,QAAjC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from '../../firebase/firebase.utils';\n\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\n const CollectionsOverviewWithSpinner=WithSpinner(CollectionsOverview)\n const CollectionPageWithSpinner=WithSpinner(CollectionPage)\n\nclass ShopPage extends React.Component {\n  state={\n    loading:true\n  }\n   unsubscribeFromSnapshot;\n\ncomponentDidMount(){\n  const {updateCollections}:any=this.props\n  const collectionRef=firestore.collection('collections')\n  collectionRef.get().then(snapshot=>{\n    const collectionsMap=convertCollectionsSnapshotToMap(snapshot)\n    updateCollections(collectionsMap)\n    this.setState({loading:false})\n  })\n   \n\n}\n\n  render() {\n    const {match}:any = this.props\n    const {loading}=this.state\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} render={(props)=><CollectionsOverviewWithSpinner isLoading={loading} {...props}/>} />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={props=>(<CollectionPageWithSpinner isLoading={loading}{...props}/>)}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap =>\n    dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null,mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}